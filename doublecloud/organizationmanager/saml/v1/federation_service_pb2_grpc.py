# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from doublecloud.organizationmanager.saml.v1 import federation_pb2 as doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__pb2
from doublecloud.organizationmanager.saml.v1 import federation_service_pb2 as doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2
from doublecloud.v1 import operation_pb2 as doublecloud_dot_v1_dot_operation__pb2


class FederationServiceStub(object):
    """A set of methods for managing federations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/doublecloud.organizationmanager.saml.v1.FederationService/Get',
                request_serializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.GetFederationRequest.SerializeToString,
                response_deserializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__pb2.Federation.FromString,
                _registered_method=True)
        self.Create = channel.unary_unary(
                '/doublecloud.organizationmanager.saml.v1.FederationService/Create',
                request_serializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.CreateFederationRequest.SerializeToString,
                response_deserializer=doublecloud_dot_v1_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Update = channel.unary_unary(
                '/doublecloud.organizationmanager.saml.v1.FederationService/Update',
                request_serializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.UpdateFederationRequest.SerializeToString,
                response_deserializer=doublecloud_dot_v1_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/doublecloud.organizationmanager.saml.v1.FederationService/Delete',
                request_serializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.DeleteFederationRequest.SerializeToString,
                response_deserializer=doublecloud_dot_v1_dot_operation__pb2.Operation.FromString,
                _registered_method=True)


class FederationServiceServicer(object):
    """A set of methods for managing federations.
    """

    def Get(self, request, context):
        """Returns the specified federation.

        To get the list of available federations, make a [List] request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Creates a federation in the specified organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Updates the specified federation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Deletes the specified federation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FederationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.GetFederationRequest.FromString,
                    response_serializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__pb2.Federation.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.CreateFederationRequest.FromString,
                    response_serializer=doublecloud_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.UpdateFederationRequest.FromString,
                    response_serializer=doublecloud_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.DeleteFederationRequest.FromString,
                    response_serializer=doublecloud_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'doublecloud.organizationmanager.saml.v1.FederationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('doublecloud.organizationmanager.saml.v1.FederationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FederationService(object):
    """A set of methods for managing federations.
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/doublecloud.organizationmanager.saml.v1.FederationService/Get',
            doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.GetFederationRequest.SerializeToString,
            doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__pb2.Federation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/doublecloud.organizationmanager.saml.v1.FederationService/Create',
            doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.CreateFederationRequest.SerializeToString,
            doublecloud_dot_v1_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/doublecloud.organizationmanager.saml.v1.FederationService/Update',
            doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.UpdateFederationRequest.SerializeToString,
            doublecloud_dot_v1_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/doublecloud.organizationmanager.saml.v1.FederationService/Delete',
            doublecloud_dot_organizationmanager_dot_saml_dot_v1_dot_federation__service__pb2.DeleteFederationRequest.SerializeToString,
            doublecloud_dot_v1_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
