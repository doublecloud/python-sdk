# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: doublecloud/transfer/v1/endpoint.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from doublecloud.transfer.v1.endpoint import clickhouse_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_clickhouse__pb2
from doublecloud.transfer.v1.endpoint import common_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_common__pb2
from doublecloud.transfer.v1.endpoint import kafka_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_kafka__pb2
from doublecloud.transfer.v1.endpoint import mongo_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_mongo__pb2
from doublecloud.transfer.v1.endpoint import mysql_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_mysql__pb2
from doublecloud.transfer.v1.endpoint import postgres_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_postgres__pb2
from doublecloud.transfer.v1.endpoint.airbyte import s3_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_s3__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import redshift_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_redshift__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import aws_cloud_trail_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_aws__cloud__trail__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import bigquery_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_bigquery__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import mssql_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_mssql__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import amazon_ads_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_amazon__ads__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import facebook_marketing_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_facebook__marketing__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import linkedin_ads_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_linkedin__ads__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import instagram_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_instagram__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import google_ads_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_google__ads__source__pb2
from doublecloud.transfer.v1.endpoint.airbyte import snowflake_source_pb2 as doublecloud_dot_transfer_dot_v1_dot_endpoint_dot_airbyte_dot_snowflake__source__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&doublecloud/transfer/v1/endpoint.proto\x12\x17\x64oublecloud.transfer.v1\x1a\x31\x64oublecloud/transfer/v1/endpoint/clickhouse.proto\x1a-doublecloud/transfer/v1/endpoint/common.proto\x1a,doublecloud/transfer/v1/endpoint/kafka.proto\x1a,doublecloud/transfer/v1/endpoint/mongo.proto\x1a,doublecloud/transfer/v1/endpoint/mysql.proto\x1a/doublecloud/transfer/v1/endpoint/postgres.proto\x1a\x38\x64oublecloud/transfer/v1/endpoint/airbyte/s3_source.proto\x1a>doublecloud/transfer/v1/endpoint/airbyte/redshift_source.proto\x1a\x45\x64oublecloud/transfer/v1/endpoint/airbyte/aws_cloud_trail_source.proto\x1a>doublecloud/transfer/v1/endpoint/airbyte/bigquery_source.proto\x1a;doublecloud/transfer/v1/endpoint/airbyte/mssql_source.proto\x1a@doublecloud/transfer/v1/endpoint/airbyte/amazon_ads_source.proto\x1aHdoublecloud/transfer/v1/endpoint/airbyte/facebook_marketing_source.proto\x1a\x42\x64oublecloud/transfer/v1/endpoint/airbyte/linkedin_ads_source.proto\x1a?doublecloud/transfer/v1/endpoint/airbyte/instagram_source.proto\x1a@doublecloud/transfer/v1/endpoint/airbyte/google_ads_source.proto\x1a?doublecloud/transfer/v1/endpoint/airbyte/snowflake_source.proto\"\xb8\x02\n\x08\x45ndpoint\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n\nproject_id\x18\x02 \x01(\tR\tprojectId\x12\x12\n\x04name\x18\x04 \x01(\tR\x04name\x12 \n\x0b\x64\x65scription\x18\x05 \x01(\tR\x0b\x64\x65scription\x12\x45\n\x06labels\x18\x06 \x03(\x0b\x32-.doublecloud.transfer.v1.Endpoint.LabelsEntryR\x06labels\x12\x45\n\x08settings\x18\x34 \x01(\x0b\x32).doublecloud.transfer.v1.EndpointSettingsR\x08settings\x1a\x39\n\x0bLabelsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"\xa1\x10\n\x10\x45ndpointSettings\x12R\n\x0cmysql_source\x18\x01 \x01(\x0b\x32-.doublecloud.transfer.v1.endpoint.MysqlSourceH\x00R\x0bmysqlSource\x12[\n\x0fpostgres_source\x18\x02 \x01(\x0b\x32\x30.doublecloud.transfer.v1.endpoint.PostgresSourceH\x00R\x0epostgresSource\x12R\n\x0ckafka_source\x18\x08 \x01(\x0b\x32-.doublecloud.transfer.v1.endpoint.KafkaSourceH\x00R\x0bkafkaSource\x12R\n\x0cmongo_source\x18\t \x01(\x0b\x32-.doublecloud.transfer.v1.endpoint.MongoSourceH\x00R\x0bmongoSource\x12\x61\n\x11\x63lickhouse_source\x18\x10 \x01(\x0b\x32\x32.doublecloud.transfer.v1.endpoint.ClickhouseSourceH\x00R\x10\x63lickhouseSource\x12Q\n\ts3_source\x18| \x01(\x0b\x32\x32.doublecloud.transfer.v1.endpoint.airbyte.S3SourceH\x00R\x08s3Source\x12s\n\x15\x61ws_cloudtrail_source\x18\x7f \x01(\x0b\x32=.doublecloud.transfer.v1.endpoint.airbyte.AWSCloudTrailSourceH\x00R\x13\x61wsCloudtrailSource\x12\x65\n\x10\x62ig_query_source\x18\x80\x01 \x01(\x0b\x32\x38.doublecloud.transfer.v1.endpoint.airbyte.BigQuerySourceH\x00R\x0e\x62igQuerySource\x12\x80\x01\n\x19\x66\x61\x63\x65\x62ook_marketing_source\x18\x82\x01 \x01(\x0b\x32\x41.doublecloud.transfer.v1.endpoint.airbyte.FacebookMarketingSourceH\x00R\x17\x66\x61\x63\x65\x62ookMarketingSource\x12h\n\x11google_ads_source\x18\x84\x01 \x01(\x0b\x32\x39.doublecloud.transfer.v1.endpoint.airbyte.GoogleAdsSourceH\x00R\x0fgoogleAdsSource\x12h\n\x11\x61mazon_ads_source\x18\x86\x01 \x01(\x0b\x32\x39.doublecloud.transfer.v1.endpoint.airbyte.AmazonAdsSourceH\x00R\x0f\x61mazonAdsSource\x12g\n\x10instagram_source\x18\x88\x01 \x01(\x0b\x32\x39.doublecloud.transfer.v1.endpoint.airbyte.InstagramSourceH\x00R\x0finstagramSource\x12n\n\x13linkedin_ads_source\x18\x89\x01 \x01(\x0b\x32;.doublecloud.transfer.v1.endpoint.airbyte.LinkedinAdsSourceH\x00R\x11linkedinAdsSource\x12[\n\x0cmssql_source\x18\x8a\x01 \x01(\x0b\x32\x35.doublecloud.transfer.v1.endpoint.airbyte.MSSQLSourceH\x00R\x0bmssqlSource\x12\x64\n\x0fredshift_source\x18\x8b\x01 \x01(\x0b\x32\x38.doublecloud.transfer.v1.endpoint.airbyte.RedshiftSourceH\x00R\x0eredshiftSource\x12g\n\x10snowflake_source\x18\x94\x01 \x01(\x0b\x32\x39.doublecloud.transfer.v1.endpoint.airbyte.SnowflakeSourceH\x00R\x0fsnowflakeSource\x12R\n\x0cmysql_target\x18\x65 \x01(\x0b\x32-.doublecloud.transfer.v1.endpoint.MysqlTargetH\x00R\x0bmysqlTarget\x12[\n\x0fpostgres_target\x18\x66 \x01(\x0b\x32\x30.doublecloud.transfer.v1.endpoint.PostgresTargetH\x00R\x0epostgresTarget\x12\x61\n\x11\x63lickhouse_target\x18h \x01(\x0b\x32\x32.doublecloud.transfer.v1.endpoint.ClickhouseTargetH\x00R\x10\x63lickhouseTarget\x12R\n\x0ckafka_target\x18n \x01(\x0b\x32-.doublecloud.transfer.v1.endpoint.KafkaTargetH\x00R\x0bkafkaTarget\x12R\n\x0cmongo_target\x18o \x01(\x0b\x32-.doublecloud.transfer.v1.endpoint.MongoTargetH\x00R\x0bmongoTargetB\n\n\x08settingsBEZCgithub.com/doublecloud/go-genproto/doublecloud/transfer/v1;transferb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'doublecloud.transfer.v1.endpoint_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZCgithub.com/doublecloud/go-genproto/doublecloud/transfer/v1;transfer'
  _ENDPOINT_LABELSENTRY._options = None
  _ENDPOINT_LABELSENTRY._serialized_options = b'8\001'
  _globals['_ENDPOINT']._serialized_start=1075
  _globals['_ENDPOINT']._serialized_end=1387
  _globals['_ENDPOINT_LABELSENTRY']._serialized_start=1330
  _globals['_ENDPOINT_LABELSENTRY']._serialized_end=1387
  _globals['_ENDPOINTSETTINGS']._serialized_start=1390
  _globals['_ENDPOINTSETTINGS']._serialized_end=3471
# @@protoc_insertion_point(module_scope)
