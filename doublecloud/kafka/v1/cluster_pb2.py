# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: doublecloud/kafka/v1/cluster.proto
# Protobuf Python Version: 5.28.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    1,
    '',
    'doublecloud/kafka/v1/cluster.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from doublecloud.v1 import cluster_pb2 as doublecloud_dot_v1_dot_cluster__pb2
from doublecloud.v1 import maintenance_pb2 as doublecloud_dot_v1_dot_maintenance__pb2
from doublecloud.kafka.v1 import config_pb2 as doublecloud_dot_kafka_dot_v1_dot_config__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"doublecloud/kafka/v1/cluster.proto\x12\x14\x64oublecloud.kafka.v1\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1c\x64oublecloud/v1/cluster.proto\x1a doublecloud/v1/maintenance.proto\x1a!doublecloud/kafka/v1/config.proto\"\xd9\t\n\x07\x43luster\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n\nproject_id\x18\x02 \x01(\tR\tprojectId\x12\x1d\n\ncloud_type\x18\x03 \x01(\tR\tcloudType\x12\x1b\n\tregion_id\x18\x04 \x01(\tR\x08regionId\x12;\n\x0b\x63reate_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\ncreateTime\x12\x12\n\x04name\x18\x06 \x01(\tR\x04name\x12 \n\x0b\x64\x65scription\x18\x07 \x01(\tR\x0b\x64\x65scription\x12\x35\n\x06status\x18\x08 \x01(\x0e\x32\x1d.doublecloud.v1.ClusterStatusR\x06status\x12\x18\n\x07version\x18\t \x01(\tR\x07version\x12\x44\n\tresources\x18\n \x01(\x0b\x32&.doublecloud.kafka.v1.ClusterResourcesR\tresources\x12M\n\x0f\x63onnection_info\x18\x0b \x01(\x0b\x32$.doublecloud.kafka.v1.ConnectionInfoR\x0e\x63onnectionInfo\x12.\n\x06\x61\x63\x63\x65ss\x18\x0c \x01(\x0b\x32\x16.doublecloud.v1.AccessR\x06\x61\x63\x63\x65ss\x12>\n\nencryption\x18\r \x01(\x0b\x32\x1e.doublecloud.v1.DataEncryptionR\nencryption\x12\x1d\n\nnetwork_id\x18\x0e \x01(\tR\tnetworkId\x12\x63\n\x17private_connection_info\x18\x0f \x01(\x0b\x32+.doublecloud.kafka.v1.PrivateConnectionInfoR\x15privateConnectionInfo\x12P\n\x12maintenance_window\x18\x10 \x01(\x0b\x32!.doublecloud.v1.MaintenanceWindowR\x11maintenanceWindow\x12Q\n\x11planned_operation\x18\x11 \x01(\x0b\x32$.doublecloud.v1.MaintenanceOperationR\x10plannedOperation\x12\x44\n\x0ckafka_config\x18\x12 \x01(\x0b\x32!.doublecloud.kafka.v1.KafkaConfigR\x0bkafkaConfig\x12|\n metrics_exporter_connection_info\x18\x13 \x01(\x0b\x32\x33.doublecloud.kafka.v1.MetricsExporterConnectionInfoR\x1dmetricsExporterConnectionInfo\x12`\n\x16schema_registry_config\x18\x14 \x01(\x0b\x32*.doublecloud.kafka.v1.SchemaRegistryConfigR\x14schemaRegistryConfig\x12K\n\x0frest_api_config\x18\x15 \x01(\x0b\x32#.doublecloud.kafka.v1.RestAPIConfigR\rrestApiConfig\"\xab\x04\n\x10\x43lusterResources\x12\x42\n\x05kafka\x18\x01 \x01(\x0b\x32,.doublecloud.kafka.v1.ClusterResources.KafkaR\x05kafka\x1a\xd2\x03\n\x05Kafka\x12,\n\x12resource_preset_id\x18\x01 \x01(\tR\x10resourcePresetId\x12\x38\n\tdisk_size\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64ValueR\x08\x64iskSize\x12>\n\x0c\x62roker_count\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.Int64ValueR\x0b\x62rokerCount\x12:\n\nzone_count\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int64ValueR\tzoneCount\x12?\n\rmax_disk_size\x18\x05 \x01(\x0b\x32\x1b.google.protobuf.Int64ValueR\x0bmaxDiskSize\x12Q\n\x16min_resource_preset_id\x18\x06 \x01(\x0b\x32\x1c.google.protobuf.StringValueR\x13minResourcePresetId\x12Q\n\x16max_resource_preset_id\x18\x07 \x01(\x0b\x32\x1c.google.protobuf.StringValueR\x13maxResourcePresetId\"m\n\x0e\x43onnectionInfo\x12+\n\x11\x63onnection_string\x18\x01 \x01(\tR\x10\x63onnectionString\x12\x12\n\x04user\x18\x02 \x01(\tR\x04user\x12\x1a\n\x08password\x18\x03 \x01(\tR\x08password\"t\n\x15PrivateConnectionInfo\x12+\n\x11\x63onnection_string\x18\x01 \x01(\tR\x10\x63onnectionString\x12\x12\n\x04user\x18\x02 \x01(\tR\x04user\x12\x1a\n\x08password\x18\x03 \x01(\tR\x08password\"U\n\x1dMetricsExporterConnectionInfo\x12\x12\n\x04user\x18\x02 \x01(\tR\x04user\x12\x1a\n\x08password\x18\x03 \x01(\tR\x08passwordJ\x04\x08\x01\x10\x02\"m\n\x04Host\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n\ncluster_id\x18\x02 \x01(\tR\tclusterId\x12\x32\n\x06status\x18\x03 \x01(\x0e\x32\x1a.doublecloud.v1.HostStatusR\x06statusB?Z=github.com/doublecloud/go-genproto/doublecloud/kafka/v1;kafkab\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'doublecloud.kafka.v1.cluster_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z=github.com/doublecloud/go-genproto/doublecloud/kafka/v1;kafka'
  _globals['_CLUSTER']._serialized_start=225
  _globals['_CLUSTER']._serialized_end=1466
  _globals['_CLUSTERRESOURCES']._serialized_start=1469
  _globals['_CLUSTERRESOURCES']._serialized_end=2024
  _globals['_CLUSTERRESOURCES_KAFKA']._serialized_start=1558
  _globals['_CLUSTERRESOURCES_KAFKA']._serialized_end=2024
  _globals['_CONNECTIONINFO']._serialized_start=2026
  _globals['_CONNECTIONINFO']._serialized_end=2135
  _globals['_PRIVATECONNECTIONINFO']._serialized_start=2137
  _globals['_PRIVATECONNECTIONINFO']._serialized_end=2253
  _globals['_METRICSEXPORTERCONNECTIONINFO']._serialized_start=2255
  _globals['_METRICSEXPORTERCONNECTIONINFO']._serialized_end=2340
  _globals['_HOST']._serialized_start=2342
  _globals['_HOST']._serialized_end=2451
# @@protoc_insertion_point(module_scope)
